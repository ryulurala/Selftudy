Node.JS <JavaScript와 HTTP>

HTTP(Hypertext Transfer Protocol) : html을 Web에서 주고 받는 규칙
- Web browser -> Web server Request Headers를 보낼 때 규칙.
- Web server -> Web browser Response Headers를 보낼 때 규칙.

------------------------------------------------------------------------------------------------------------------
Node.JS <소개>

1990 - Tim Berners-Lee에 의해 Web이 탄생.
1994 - Marc Andreessen에 의해 Netscape Navigator라는 Web browser 탄생.
1995 - Brendan Eich에 의해 JavaScript 등장으로 Web의 Html의 정적인 페이지가 JavaScript의 동적인 페이지 제어가 가능하게됨.
2004 - Google의 GMail, GMap Application 등장.
2008 - Google의 Chrome browser 발표. V8 Engine을 Open source로 공개로 JavaScript가 Web분야 외에 다른 곳에서도 사용하게 됨.
2009 - Ryan Dahl의 Node.JS 개발. *Node.JS = V8 Engine + Event-driven + Non-blocking I.O

JavaScript
- Language 측면 : JavaScript (ex. 비유 : 한국어), (ex. alert('Hello world') : JavaScript의 function)
- RunTime 측면 : Web browser, Node.JS (ex. 비유 : 의학용어, 법 용어 등) (ex. alert('Hello world') : Only Web browser, Node.JS에서 Error)

Node.JS의 경쟁자
Serverside의 
- Python
- JAVA
- PHP
- Ruby

Node.JS의 장점
- 속도(Google의 V8 Engine을 사용하기 때문에)
- Event-driven program
- Non-blocking I.O

*JavaScript언어 하나로 Client부터 Server까지 프로그래밍이 가능하다.

------------------------------------------------------------------------------------------------------------------
Node.JS <설치>

Node.JS 설치
-> nodejs.org 접속
-> 컴퓨터 사양에 맞게 nodejs 최신 버전 Download *Check : 콘솔에서 node --version

------------------------------------------------------------------------------------------------------------------
Node.JS <실행>

ubuntu에서 실행
-> 디렉토리를 생성
-> sudo chown ubuntu . 를 입력하여 권한을 관리자로 바꾼다.

화면에 출력
-> Console.log('Hello world');

실행(Linux, Mac, Window 모두)
-> node (파일 이름).js

------------------------------------------------------------------------------------------------------------------
Node.JS <간단한 웹 앱 만들기 1 : 실행>

예제 코드
const http = require('http');

const hostname = '127.0.0.1';
const port = 1337;

http.createServer((req, res) => {
	res.writeHead(200, { 'Content-Type' : 'text/plain' });
	res.end('Hello World\n');
}).listen(port, hostname, () => {
	console.log(`Server running at http://${hostname}:${port}/`);
});

------------------------------------------------------------------------------------------------------------------
Node.JS <간단한 웹 앱 만들기 2 : 인터넷의 동작 방법>

Client -------(Internet)------- Server

Client와 Server는 상대적인 개념
- Client는 Web browser가 설치돼있는 컴퓨터(정보 요청)
- Server는 (정보 응답)

Domain : 컴퓨터에 접속하기 쉽게 별명
IP address : Domain에 해당되는 구체적인 주소

Port : 0 ~ 65536(2^16-1), Client가 Server안의 요청하는 위치.

서버의 종류
- DB 서버
- 채팅 서버
- 게임 서버
- 웹 서버(http - port : 80) : Port 번호는 생략 가능하다.(웹은 많이 사용하므로)

------------------------------------------------------------------------------------------------------------------
Node.JS <간단한 웹 앱 만들기 2 : 정리>

예제 코드
const http = require('http');

const hostname = '127.0.0.1';
const port = 1337;

http.createServer((req, res) => {					// Server를 만듬.
	res.writeHead(200, { 'Content-Type' : 'text/plain' });		// 'res'ponse : 응답
	res.end('Hello World\n');					// 'res'ponse : 응답
}).listen(port, hostname, () => {					// listen을 함. 1. port번호, 2. hostname : IP address라고 생각하면 됨.
	console.log(`Server running at http://${hostname}:${port}/`);	// Server 화면 출력
});

------------------------------------------------------------------------------------------------------------------
Node.JS <모듈 1 : 기초>









