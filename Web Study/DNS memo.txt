[WEB2 - DNS-1: 수업 소개]
* DNS(Domain Name Systems)
- IP 주소를 외우고 다닐 수 없으므로 이름으로 접근할 수 있도록 도와준다.
- 컴퓨터(Host)에 이름을 붙인다.

[WEB2 - DNS-2: IP주소와 hosts-1]
* IP 주소
- Host에 접속하기 위해서는 IP 주소가 필요하다.

* hosts
- 전화번호부와 비슷하다.
- IP 주소를 Domain name으로 바꾼다.

[WEB2 - DNS-3: IP주소와 hosts-2]
* hosts
- 운영체제별로 파일 위치가 다르다.
- hosts파일 내용에 localhost = 127.0.0.1 로 되어 있다.

[WEB2 - DNS-4: 도메인 이름과 보안]
* 보안
- hosts 파일을 변조하여 악용할 수 있다.
- https로 피싱을 막을 수 있다.

[WEB2 - DNS-5: DNS의 태동]
* Stanford Research Institute
- hosts 파일을 다운 받아서 이름을 통해 접근할 수 있도록 하였다.
- 수작업을 통해서 hosts 파일을 갱신함.
- 한 번 작업을 하면 모든 사용자에게 hosts 파일을 주어야 한다.

[WEB2 - DNS-6: DNS의 원리]
* DNS의 원리
1) Server는 DNS Server에 등록시킨다.
2) Client가 접속할 때는 hosts 파일을 확인하고 없으면 DNS Server에 요청한다.
3) IP 주소를 응답받고 그 주소로 접속한다.

[WEB2 - DNS-7: public DNS의 사용]
* ISP(Internel Service Provider)
- DNS Server의 IP를 ISP가 등록해놓았다.

[WEB2 - DNS-8: 도메인 이름의 구조]
* DNS 구조
ex) blog.example.com.
뒤에서부터
- "." : Root
- ".com" : Top-level
- ".example" : Second-level
- "blog" : Sub
- Root는 Top-level 주소만을 알고, Top-level은 Second-level 주소만을 알고, Second-level은 Sub domain 주소만 안다.
- Root에게 먼저 물어보고 그 다음에 Top-level, 그 다음에 Second-level, 그 다음에 Sub에게 물어보고 IP주소를 알게 된다.

[WEB2 - DNS-9: 도메인 이름 등록 과정과 원리]
* ICANN
- 비영리 단체
- 전 세계의 IP 주소를 관리하고, Root name server의 관리자이다.
- NS: Name Server(Recode type)
- 기억하고 있는 것: com NS (Registry)

* Registry: 등록소
- .com, .kr, .net 등의 Top-level을 관리하고 있다.
- 기억하고 있는 것: example.com NS (Registrar)

* Registrar: 등록 대행자
- Domain을 등록하는 것을 대행해준다.
- A: Address(Recode type)
- authoritative name server A N.N.N.N

* Recode type
- A(Address: IPv4), NS(Name Server), ...

- 인터넷을 연결하면 DNS Server의 주소가 자동으로 세팅된다.

* Server가 등록 과정
1) Registrar(authoritative name server)에게 등록
2) Registrar가 Registry(Top-Level-Domain)에 등록
3) Registry가 ICANN(Root name server)에 등록

* Client가 접근 과정
1) 인터넷을 연결하면 자동으로 ISP가 등록해놓은 DNS Server(Root name server)의 주소가 자동으로 세팅
2) Client는 DNS Server에 접근(해당 도메인의 등록된 IP 알려달라고 요청)
3.1) DNS Server는 Root name server에게 알려달라고 요청
3.2) Root는 DNS Server에게 TLD 주소를 알려준다.
4.1) DNS Server는 TLD에게 알려달라고 요청
4.2) TLD는 authoritative name server의 주소를 DNS Server에게 알려준다.
5.1) DNS Server는 authoritative name server에게 알려달라고 요청
5.2) authoritative name server는 DNS Server에게 IP 주소를 알려준다.
6) DNS Server는 Client에게 IP 주소를 알려준다.

[WEB2 - DNS-10: nslookup]
* nslookup
- 도메인에 해당되는 IP 주소를 알 수 있다.
- "-type=ns" : Name server의 정보를 알 수 있다.
- "-type=a" : Address server의 정보를 알 수있다.
ex) nslookup (domain name)은 nslookup -type=a (domain name)와 같다.
ex) nslookup -type=ns (domain name)

[WEB2 - DNS-11: 나의 도메인 이름 장만하기]
* freenom.com
- 1년간 무료로 도메인을 쓸 수 있다. (.ga, .tk, .cf, .gq, .ml 등)

* TTL(Time To Live)
- Cache가 얼마 동안 지속되는지.
- 시간을 늘리면 Cache 지속이 늘어나 빠르다.
- IP가 자주 바뀌면 TTL을 작게 설정한다.

[WEB2 - DNS-12: DNS record & CNAME]
* DNS Record
- A: Address, IPv4
- NS: Name Server
- MX: Mail Exchange
- CNAME : Canonical Name

* CNAME
- DNS Record 중 하나
- 도메인을 다른 도메인을 가리키게 한다.
- 일종의 별명을 지어준다.

[WEB2 - DNS-13: Github pages에 도메인 연결하기]
1) Github에게 내 도메인을 알려준다.
2) Page의 IP를 알고 A 레코드로 등록한다.

[WEB2 - DNS-14: 수업을 마치며]
- 캘리포니아 대학교 버클리 캠퍼스에서 최초의 DNS Server "BIND"를 만들었다.

- DDNS(Dynamic DNS)
- HTTPS, SSL을 사용하여 피싱 방지