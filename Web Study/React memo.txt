------------------------------------------------------------------------------
[React-1: 수업소개]

* React의 장점(컴포넌트 사용)
1) 가독성
2) 재사용성 
3) 유지보수

------------------------------------------------------------------------------
[React-2: 공부 전략]

* Coding(개발) -> Run(실행) -> Deploy(배포)

------------------------------------------------------------------------------
[React-3: 개발 환경의 종류]

* 개발 환경 종류
1) Online Playgrounds: 온라인으로 환경 설정
ex) CodeSandbox

2) Add React to a Website: 부분적으로 추가할 때 사용

3) Create a New React App: React로 앱을 개발할 때, 개발 환경, 도구들을 잘 모아서 제공

------------------------------------------------------------------------------
[React-4: npm을 이용해서 create react app 설치]

* npm
- Node js의 앱스토어

* npm vs npx
- npm: 일반 설치
ex)
npm install -g create-react-app
-> 글로벌하게 create-react-app을 설치한다.(EACCES가 뜨면 SUDO를 앞에다 입력해주자.)

- (권장) npx: 임시 설치(최신 상태)
-> 공식 문서에서 React 다운로드 방법(자주 사용하지 않는 무거운 패키지들이 남기 때문에)
ex)
npx create-react-app

------------------------------------------------------------------------------
[React-5: create react app을 이용해서 개발환경구축]

* React 프로젝트 생성
ex)
1) npx create-react-app . : (권장) 현재 디렉토리('.')에서 임시 패키지를 설치하여 프로젝트 생성
2) create-react-app . : 현재 디렉토리('.')에서 npm으로 설치한 패키지를 이용하여 프로젝트 생성
ex)
  npx create-react-app my-app
  cd my-app

- 폴더가 "react"이거나 이름에 대문자가 포함되서는 안된다.

------------------------------------------------------------------------------
[React-6: 샘플 웹 앱 실행]

* Sample Web App
- 시작: npm run start
- 종료: Ctrl + C

------------------------------------------------------------------------------
[React-7: JS 코딩하는 법]

* public 디렉토리
- index.html이 있는 곳(처음 실행 파일)
- id="root" [in index.html] : React component가 있는 곳

* src 디렉토리
- 개발한 코드들을 넣는 곳
- index.js : 진입 파일
- document.getElementById("root") [in index.js] : id 값이 root를 선택하는 선택자.
- <App /> : 사용자 정의 컴포넌트
- App.js : 실제 구현 파일(class type OR function type) - ** 개발할 코드 파일 **

------------------------------------------------------------------------------
[React-8: CSS 코딩하는 법]

- index.css, App.css 를 코딩한다.

------------------------------------------------------------------------------
[React-9: 배포하는 법]

* Deploy(배포)
- create-react-app의 환경(개발 환경)은 무겁다.
- 따라서 build하여 배포하여야 한다.
ex)
  npm run build
- 배포할 파일을 만든다(Release)
- 실제 서비스할 파일은 build 파일을 써야 한다.

* 웹 서버를 통해 실행
1) npm install -g serve : serve를 설치
2) npx serve -s build : 한 번만 실행(npx를 이용), -s 옵션은 build에 있는 것을 root로 하겠다.

------------------------------------------------------------------------------
[React-10: 리액트가 없다면]

- html 코딩은 하드코딩이라면 react 코딩은 재사용성으로서 코딩하기 때문에 유용하다.

------------------------------------------------------------------------------
[React-11: 컴포넌트 만들기]



------------------------------------------------------------------------------
[React-12: props]
------------------------------------------------------------------------------
[React-13: React Developer Tools]
------------------------------------------------------------------------------
[React-14: Component 파일로 분리하기]
------------------------------------------------------------------------------
[React-15: state]
소개
사용
key
------------------------------------------------------------------------------
[React-16: 이벤트 state props & render 함수]
소개
이벤트 설치
이벤트에서 state 변경하기
이벤트 bind 함수 이해하기
이벤트 setState 함수 이해하기
------------------------------------------------------------------------------
[React-17: 컴포넌트 이벤트 만들기]
------------------------------------------------------------------------------
[React-18: 베이스 캠프]
------------------------------------------------------------------------------
[React-19: create 구현]
------------------------------------------------------------------------------
[React-20: update 구현]
------------------------------------------------------------------------------
[React-21: delete 구현]
------------------------------------------------------------------------------
[React-22: 수업을 마치며]
------------------------------------------------------------------------------